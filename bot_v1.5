from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
import openai


token  = '7871498822:AAG71TqIyv6fNMhgsURny3ZNr5EWT-F3Nu4'
chave_api = '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'

openai.api_key = chave_api

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Responde ao comando /start."""
    user = update.effective_user
    await update.message.reply_text(
        f"Olá, {user.first_name}! Sou um bot que explica economia de forma simples. Pergunte-me qualquer coisa!"
    )

async def explain_economy(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Responde a perguntas de economia usando OpenAI."""
    user_message = update.message.text

    try:
        # Envia a mensagem para a API da OpenAI
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "Você é um especialista em economia que explica conceitos de forma simples e acessível."},
                {"role": "user", "content": user_message}
            ]
        )

        # Extrai a resposta
        bot_reply = response["choices"][0]["message"]["content"].strip()

        # Envia a resposta de volta ao usuário
        await update.message.reply_text(bot_reply)
        
    except Exception as e:
        await update.message.reply_text("Desculpe, algo deu errado. Tente novamente mais tarde.")
        print(f"Erro: {e}")
        
        def main() -> None:
    # Inicializa o bot.
    # Configura a aplicação
    application = Application.builder().token(token).build()

    # Configura os handlers
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, explain_economy))

    # Inicia o bot
    application.run_polling()

if __name__ == '__main__':
    main()
